[{"title": "sorflow\u6559\u7a0b01-\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u901a\u4fd7\u7406\u89e3\u548c\u7b80\u5355\u6848\u4f8b", "href": "2018/06/21/tensorflow%E6%95%99%E7%A8%8B01-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E9%80%9A%E4%BF%97%E7%90%86%E8%A7%A3%E5%92%8C%E7%AE%80%E5%8D%95%E6%A1%88%E4%BE%8B/index", "name": "\u8be5\u7528\u6237\u5df2\u7ecf\u88ab\u5c01", "id": "172625268", "ip": "114.255.218.16", "date": "2018-06-22 15:33:44", "content": "\u6d4b\u8bd5\u56de\u590d\u4ee5\u4e0b"}, {"title": "sorflow\u6559\u7a0b01-\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u901a\u4fd7\u7406\u89e3\u548c\u7b80\u5355\u6848\u4f8b", "href": "2018/06/21/tensorflow%E6%95%99%E7%A8%8B01-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E9%80%9A%E4%BF%97%E7%90%86%E8%A7%A3%E5%92%8C%E7%AE%80%E5%8D%95%E6%A1%88%E4%BE%8B/index", "name": "\u8be5\u7528\u6237\u5df2\u7ecf\u88ab\u5c01", "id": "172625268", "ip": "114.255.218.16", "date": "2018-06-22 09:44:44", "content": "\u8fd9\u662f\u4e00\u4e2a\u7cfb\u5217\u6559\u7a0b"}, {"title": "python selenium\u5982\u4f55\u5728\u70b9\u51fb\u540e\u7b49\u5f85\u9875\u9762\u5237\u65b0", "href": "2018/05/22/python-selenium%E5%A6%82%E4%BD%95%E5%9C%A8%E7%82%B9%E5%87%BB%E5%90%8E%E7%AD%89%E5%BE%85%E9%A1%B5%E9%9D%A2%E5%88%B7%E6%96%B0", "name": "\u8be5\u7528\u6237\u5df2\u7ecf\u88ab\u5c01", "id": "172625268", "ip": "114.255.218.16", "date": "2018-06-19 15:18:04", "content": "\u540e\u671f\u4f1a\u6709\u89c6\u9891\u6559\u7a0b\u7684"}, {"title": "python selenium\u5982\u4f55\u5728\u70b9\u51fb\u540e\u7b49\u5f85\u9875\u9762\u5237\u65b0", "href": "2018/05/22/python-selenium%E5%A6%82%E4%BD%95%E5%9C%A8%E7%82%B9%E5%87%BB%E5%90%8E%E7%AD%89%E5%BE%85%E9%A1%B5%E9%9D%A2%E5%88%B7%E6%96%B0", "name": "\u767d\u5929\u4e0d\u61c2\u591c\u7684\u9ed1", "id": "100000527800", "ip": "183.157.160.32", "date": "2018-06-19 10:54:44", "content": "\u4e00\u76f4\u60f3\u5b66\u4e60psychopy\uff0c\u53ef\u60dc\u6ca1\u6709\u597d\u7684\u4e2d\u6587\u6559\u7a0b\uff0c\u5b98\u7f51\u7684\u82f1\u6587\u624b\u518c\u770b\u8d77\u6765\u53c8\u5f88\u8d39\u52b2\uff0c\u770b\u4e86\u60a8\u7684\u6559\u7a0b\u5f88\u53d7\u7528\uff0c\u5e0c\u671b\u80fd\u770b\u5230\u540e\u7eed\u66f4\u65b0"}, {"title": "\u54c8\u5de5\u5927\u81ea\u7136\u8bed\u8a00\u5904\u7406ltp\u5728windows10\u4e0b\u7684\u5b89\u88c5\u4f7f\u7528", "href": "2018/01/31/pyltp%E5%9C%A8windows%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85", "name": "\u8be5\u7528\u6237\u5df2\u7ecf\u88ab\u5c01", "id": "172625268", "ip": "202.112.90.160", "date": "2018-05-22 17:07:03", "content": "\u8fd9\u4e2a\u5b98\u65b9\u5df2\u7ecf\u8bf4\u660e, \u5b57\u5178\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u5f71\u54cd\u5230\u5206\u8bcd, \u8fd9\u662f\u4e00\u4e2a\u6982\u7387\u95ee\u9898, \u4f46\u662f\u6211\u5e76\u6ca1\u6709\u89e3\u51b3\u529e\u6cd5"}, {"title": "\u54c8\u5de5\u5927\u81ea\u7136\u8bed\u8a00\u5904\u7406ltp\u5728windows10\u4e0b\u7684\u5b89\u88c5\u4f7f\u7528", "href": "2018/01/31/pyltp%E5%9C%A8windows%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85", "name": "\u8be5\u7528\u6237\u5df2\u7ecf\u88ab\u5c01", "id": "172625268", "ip": "202.112.90.160", "date": "2018-05-22 17:06:17", "content": "\u5e94\u8be5\u4e0d\u662f\u6a21\u677f, \u662f\u6a21\u578b\u5427? \u901a\u5e38\u6211\u662f\u660e\u786e\u8c03\u7528load\u65b9\u6cd5\u6765\u52a0\u8f7d\u6a21\u578b: m = pyltp.Segmentor() m.load(path/to/your/model)"}, {"title": "\u54c8\u5de5\u5927\u81ea\u7136\u8bed\u8a00\u5904\u7406ltp\u5728windows10\u4e0b\u7684\u5b89\u88c5\u4f7f\u7528", "href": "2018/01/31/pyltp%E5%9C%A8windows%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85", "name": "\u4e71\u4e86\u5fc3", "id": "787794842", "ip": "114.213.211.81", "date": "2018-05-15 10:05:39", "content": "\u535a\u4e3b\uff0c\u4f60\u597d\uff0c\u6211\u662f\u7528\u535a\u5ba2\u4e2d\u7684\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u4f46\u662f\u8bed\u4e49\u89d2\u8272\u6a21\u7248\u603b\u662f\u52a0\u8f7d\u5931\u8d25\uff0cpyltp\u7248\u672c\u4e3a0.2.1\uff0cLTP\u7248\u672c\u4e3a3.4.0\uff0c\u6a21\u677f\u7248\u672c\u4e3a3.4.0\uff0csrl\u6a21\u677f\u4e5f\u53e6\u5916\u4e0b\u8f7d\u4e86win\u7248\u672c\uff0csrl\u6a21\u677f\u7684\u8def\u5f84\u5177\u4f53\u5e94\u8be5\u662f\u4ec0\u4e48\uff1f"}, {"title": "gensim lda \u6587\u6863\u4e3b\u9898\u63d0\u53d6\u5b9e\u73b0", "href": "www.mlln.cn/2018/02/07/gensim-lda-%E6%96%87%E6%A1%A3%E4%B8%BB%E9%A2%98%E6%8F%90%E5%8F%96%E5%AE%9E%E7%8E%B0", "name": "DataImagination", "id": "251043155", "ip": "202.112.90.81", "date": "2018-05-03 11:29:29", "content": "python\u5185\u7f6e\u7684\u5904\u7406\u8def\u5f84\u7684\u7c7b"}, {"title": "gensim lda \u6587\u6863\u4e3b\u9898\u63d0\u53d6\u5b9e\u73b0", "href": "www.mlln.cn/2018/02/07/gensim-lda-%E6%96%87%E6%A1%A3%E4%B8%BB%E9%A2%98%E6%8F%90%E5%8F%96%E5%AE%9E%E7%8E%B0", "name": "\u626f\u75db\u4e86\u5634\u89d2", "id": "100000407700", "ip": "61.158.149.180", "date": "2018-04-27 20:41:39", "content": "d: Path \u8fd9\u4e2a\u5177\u4f53\u4ec0\u4e48\u610f\u601d\u5462\uff0c\u4e3a\u4ec0\u4e48\u5728\uff1a\u5904\u62a5\u9519 invalid syntax"}, {"title": "gensim lda \u6587\u6863\u4e3b\u9898\u63d0\u53d6\u5b9e\u73b0", "href": "2018/02/07/gensim-lda-%E6%96%87%E6%A1%A3%E4%B8%BB%E9%A2%98%E6%8F%90%E5%8F%96%E5%AE%9E%E7%8E%B0", "name": "\u626f\u75db\u4e86\u5634\u89d2", "id": "100000407700", "ip": "61.158.149.218", "date": "2018-04-27 11:28:01", "content": "\u60a8\u597d\uff01\u6587\u7ae0\u91cc\u9762\u63d0\u53d6\u4e86\u6587\u7ae0\u7684\u4e3b\u9898\u8bcd\uff0c\u4f46\u662f\u5982\u4f55\u5c06\u5176\u805a\u5408\u5230\u4e0d\u540c\u7684\u4e3b\u9898\u4e0a\u7684\u5462\uff0c\u6ca1\u600e\u4e48\u770b\u61c2\uff0c\u8fd8\u5e0c\u671b\u6307\u6559\u4e0b\uff01"}, {"title": "hrome\u6d4f\u89c8\u672c\u5730\u9875\u9762\u53d1\u751fFailded to load fil", "href": "2018/04/21/chrome%E6%B5%8F%E8%A7%88%E6%9C%AC%E5%9C%B0%E9%A1%B5%E9%9D%A2%E5%8F%91%E7%94%9FFailded-to-load-file", "name": "Chauncey", "id": "963303384", "ip": "222.129.14.222", "date": "2018-04-27 10:41:11", "content": "\u535a\u4e3b\uff0c\u6211\u5728\u54c8\u5de5\u5927LTPwin10\u5b89\u88c5\u4f7f\u7528\u7559\u8a00\u63d0\u95ee\u4e86\uff0c\u8bf7\u56de\u590d\u4e0b\uff0c\u591a\u8c22\u4e86\uff01"}, {"title": "\u54c8\u5de5\u5927\u81ea\u7136\u8bed\u8a00\u5904\u7406ltp\u5728windows10\u4e0b\u7684\u5b89\u88c5\u4f7f\u7528", "href": "2018/01/31/pyltp%E5%9C%A8windows%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85", "name": "Chauncey", "id": "963303384", "ip": "222.129.14.222", "date": "2018-04-25 18:44:35", "content": "\u6211\u5b89\u88c5\u4e86\u81ea\u5b9a\u4e49\u5b57\u5178\uff0c\u548c\u81ea\u5b9a\u4e49\u6807\u6ce8\u8bcd\u5178\uff0c\u7a0b\u5e8f\u6267\u884c\u65e0\u62a5\u9519\uff0c\u4f46\u4ece\u6700\u7ec8\u7684\u7ed3\u679c\u770b\uff0c\u81ea\u5b9a\u4e49\u8bcd\u5178\u5e76\u6ca1\u6709\u8d77\u5230\u4f5c\u7528\u3002 segmentor.load_with_lexicon(cws_model_path, 'C:/Users/shanshan.li/Desktop/\u533b\u7597\u8bcd\u5178/\u603b.txt') postagger.load_with_lexicon(pos_model_path,'C:/Users/shanshan.li/Desktop/\u533b\u7597\u8bcd\u5178/\u8bcd\u6027\u6807\u6ce8.txt') \u8fd9\u4e2a\u95ee\u9898\u600e\u4e48\u89e3\u51b3\u5462\uff1f"}, {"title": "pyltp\u5b89\u88c5\u548c\u5c0f\u767d\u5165\u95e8", "href": "www.mlln.cn/2018/02/03/pyltp%E5%AE%89%E8%A3%85%E5%92%8C%E5%B0%8F%E7%99%BD%E5%85%A5%E9%97%A8", "name": "\u6c89\u9ed8\u7684\u56de\u7b54", "id": "100000393739", "ip": "119.167.102.154", "date": "2018-04-21 19:05:53", "content": "ementicRoleLabeller \u52a0\u8f7d\u89d2\u8272\u6a21\u578b\u62a5\u9519\uff0c\u522b\u7684\u6a21\u578b\u52a0\u8f7d\u6ca1\u95ee\u9898 RuntimeError: incompatible native format - size of long \u73af\u5883\uff1awin7 x64 , Python 3.6 64\u4f4d\uff0c pyltp 0.2.1, ltp_data 3.4 \u5728\u53e6\u4e00\u4e2a\u7535\u8111\u4e0a Python 3.5 \u4e5f\u4e0d\u884c\uff0c\u8bf7\u95ee\u662f\u4ec0\u4e48\u539f\u56e0\u5462\uff1f"}, {"title": "psychopy\u6559\u7a0b2-builder\u6982\u5ff5\u4ecb\u7ecd", "href": "2017/10/02/psychopy%E6%95%99%E7%A8%8B2-builder%E6%A6%82%E5%BF%B5%E4%BB%8B%E7%BB%8D", "name": "\u8be5\u7528\u6237\u5df2\u7ecf\u88ab\u5c01", "id": "172625268", "ip": "202.112.90.81", "date": "2018-04-20 22:38:20", "content": "\u662fqq\u7fa4"}, {"title": "\u54c8\u5de5\u5927\u81ea\u7136\u8bed\u8a00\u5904\u7406ltp\u5728windows10\u4e0b\u7684\u5b89\u88c5\u4f7f\u7528", "href": "2018/01/31/pyltp%E5%9C%A8windows%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85", "name": "\u8be5\u7528\u6237\u5df2\u7ecf\u88ab\u5c01", "id": "172625268", "ip": "202.112.90.81", "date": "2018-04-20 22:37:52", "content": "\u55ef, \u4ee5\u540e\u8fd8\u4f1a\u6709\u5f88\u591a\u5de5\u5177\u5206\u4eab\u5965"}, {"title": "psychopy\u6559\u7a0b1-\u5165\u95e8\u8ba4\u8bc6psychopy", "href": "2017/09/29/psychopy%E6%95%99%E7%A8%8B1-%E5%85%A5%E9%97%A8%E8%AE%A4%E8%AF%86psychopy", "name": "\u8be5\u7528\u6237\u5df2\u7ecf\u88ab\u5c01", "id": "172625268", "ip": "202.112.90.81", "date": "2018-04-20 22:37:07", "content": "\u4e0d\u597d\u610f\u601d, \u8fd9\u4e2a\u7ad9\u6700\u8fd1\u5728\u91cd\u5efa"}, {"title": "\u54c8\u5de5\u5927\u81ea\u7136\u8bed\u8a00\u5904\u7406ltp\u5728windows10\u4e0b\u7684\u5b89\u88c5\u4f7f\u7528", "href": "2018/01/31/pyltp%E5%9C%A8windows%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85", "name": "\u7ae5\u8bdd\u4e0d\u5b8c\u7f8e", "id": "100000368264", "ip": "113.57.176.181", "date": "2018-04-12 10:13:35", "content": "\u5927\u795e\u60a8\u597d\uff0c\u6211\u60f3\u95ee\u4e00\u4e0b\uff0c\u53ef\u4ee5\u7ed9\u4e00\u4e0b\u8bed\u4e49\u89d2\u8272\u6807\u6ce8\u7684\u4ee3\u7801\u5417\uff0c\u5176\u4ed6\u7684\u90fd\u53ef\u4ee5\u8dd1\u901a\uff0c\u4f46\u662f\u8fd9\u4e2a\u4e0d\u884c\uff0c\u4e3b\u8981\u5c31\u662f\u60f3\u7528\u8fd9\u4e2a\u529f\u80fd\uff0c\u53ef\u4ee5\u5e2e\u5fd9\u89e3\u51b3\u4e00\u4e0b\u561b\uff0c\u591a\u8c22\u5927\u795e\uff0c # -*- coding: utf-8 -*- # \u4f5c\u8005\uff1aMebiuW # \u5fae\u535a\uff1a@MebiuW # python \u7248\u672c\uff1a2.7 # \u65f6\u95f4 2016/9/10 from pyltp import SentenceSplitter from pyltp import Segmentor from pyltp import Postagger from pyltp import SementicRoleLabeller from pyltp import NamedEntityRecognizer from pyltp import Parser # \u5206\u8bcd def segmentor(sentence='\u4f60\u597d\uff0c\u4f60\u89c9\u5f97\u8fd9\u4e2a\u4f8b\u5b50\u4ece\u54ea\u91cc\u6765\u7684\uff1f\u5f53\u7136\u8fd8\u662f\u76f4\u63a5\u590d\u5236\u5b98\u65b9\u6587\u6863\uff0c\u7136\u540e\u6539\u4e86\u4e0b\u8fd9\u91cc\u5f97\u5230\u7684\u3002\u6211\u7684\u5fae\u535a\u662fMebiuW\uff0c\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u6765\u81eaMebiuW\uff01'): segmentor = Segmentor() # \u521d\u59cb\u5316\u5b9e\u4f8b segmentor.load(r'E:\\soft\\pycharm\\pyltp\\3.4\\cws.model') # \u52a0\u8f7d\u6a21\u578b words = segmentor.segment(sentence) # \u5206\u8bcd # \u9ed8\u8ba4\u53ef\u4ee5\u8fd9\u6837\u8f93\u51fa print('\\t'.join(words)) # \u53ef\u4ee5\u8f6c\u6362\u6210List \u8f93\u51fa words_list = list(words) segmentor.release() # \u91ca\u653e\u6a21\u578b return words_list def posttagger(words): postagger = Postagger() # \u521d\u59cb\u5316\u5b9e\u4f8b postagger.load(r'E:\\soft\\pycharm\\pyltp\\3.4\\pos.model') # \u52a0\u8f7d\u6a21\u578b postags = postagger.postag(words) # \u8bcd\u6027\u6807\u6ce8 for word, tag in zip(words, postags): print(word + '/' + tag) postagger.release() # \u91ca\u653e\u6a21\u578b return postags # \u5206\u53e5\uff0c\u4e5f\u5c31\u662f\u5c06\u4e00\u7247\u6587\u672c\u5206\u5272\u4e3a\u72ec\u7acb\u7684\u53e5\u5b50 def sentence_splitter(sentence='\u4f60\u597d\uff0c\u4f60\u89c9\u5f97\u8fd9\u4e2a\u4f8b\u5b50\u4ece\u54ea\u91cc\u6765\u7684\uff1f\u5f53\u7136\u8fd8\u662f\u76f4\u63a5\u590d\u5236\u5b98\u65b9\u6587\u6863\uff0c\u7136\u540e\u6539\u4e86\u4e0b\u8fd9\u91cc\u5f97\u5230\u7684\u3002\u6211\u7684\u5fae\u535a\u662fMebiuW\uff0c\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u6765\u81eaMebiuW\uff01'): sents = SentenceSplitter.split(sentence) # \u5206\u53e5 print('\\n'.join(sents)) # \u547d\u540d\u5b9e\u4f53\u8bc6\u522b def ner(words, postags): recognizer = NamedEntityRecognizer() # \u521d\u59cb\u5316\u5b9e\u4f8b recognizer.load(r'E:\\soft\\pycharm\\pyltp\\3.4\\ner.model') # \u52a0\u8f7d\u6a21\u578b netags = recognizer.recognize(words, postags) # \u547d\u540d\u5b9e\u4f53\u8bc6\u522b for word, ntag in zip(words, netags): print(word + '/' + ntag) recognizer.release() # \u91ca\u653e\u6a21\u578b return netags # \u4f9d\u5b58\u8bed\u4e49\u5206\u6790 def parse(words, postags): parser = Parser() # \u521d\u59cb\u5316\u5b9e\u4f8b parser.load(r'E:\\soft\\pycharm\\pyltp\\3.4\\parser.model') # \u52a0\u8f7d\u6a21\u578b arcs = parser.parse(words, postags) # \u53e5\u6cd5\u5206\u6790 print(\\t.join(%d:%s % (arc.head, arc.relation) for arc in arcs)) parser.release() # \u91ca\u653e\u6a21\u578b return arcs # \u89d2\u8272\u6807\u6ce8 def role_label(words, postags, netags, arcs): labeller = SementicRoleLabeller() # \u521d\u59cb\u5316\u5b9e\u4f8b labeller.load(r'E:\\soft\\pycharm\\pyltp\\3.4\\pisrl.model') # \u52a0\u8f7d\u6a21\u578b roles = labeller.label(words, postags, netags, arcs) # \u8bed\u4e49\u89d2\u8272\u6807\u6ce8 for role in roles: print(role.index, .join( [%s:(%d,%d) % (arg.name, arg.range.start, arg.range.end) for arg in role.arguments])) labeller.release() # \u91ca\u653e\u6a21\u578b # \u6d4b\u8bd5\u5206\u53e5\u5b50 print('******************\u6d4b\u8bd5\u5c06\u4f1a\u987a\u5e8f\u6267\u884c\uff1a**********************') sentence_splitter() print('###############\u4ee5\u4e0a\u4e3a\u5206\u53e5\u5b50\u6d4b\u8bd5###############') # \u6d4b\u8bd5\u5206\u8bcd words = segmentor('\u6211\u5bb6\u5728\u6606\u660e\uff0c\u6211\u73b0\u5728\u5728\u5317\u4eac\u4e0a\u5b66\u3002\u4e2d\u79cb\u8282\u4f60\u662f\u5426\u4f1a\u60f3\u5230\u674e\u767d\uff1f\u8fd8\u6709\uff0c\u5fae\u535a\u662fMebiuW') print('###############\u4ee5\u4e0a\u4e3a\u5206\u8bcd\u6d4b\u8bd5###############') # \u6d4b\u8bd5\u6807\u6ce8 tags = posttagger(words) print('###############\u4ee5\u4e0a\u4e3a\u8bcd\u6027\u6807\u6ce8\u6d4b\u8bd5###############') # \u547d\u540d\u5b9e\u4f53\u8bc6\u522b netags = ner(words, tags) print('###############\u4ee5\u4e0a\u4e3a\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u6d4b\u8bd5###############') # \u4f9d\u5b58\u53e5\u6cd5\u8bc6\u522b arcs = parse(words, tags) print('###############\u4ee5\u4e0a\u4e3a\u4f9d\u5b58\u53e5\u6cd5\u6d4b\u8bd5###############') # \u89d2\u8272\u6807\u6ce8 roles = role_label(words, tags, netags, arcs) print('###############\u4ee5\u4e0a\u4e3a\u89d2\u8272\u6807\u6ce8\u6d4b\u8bd5###############') [dynet] random seed: 2422615781 [dynet] allocating memory: 2000MB [dynet] memory allocation done. Traceback (most recent call last): File E:/soft/pycharm/workplace/emergency/thesis/srl_ltp.py, line 92, in &lt;module&gt; roles = role_label(words, tags, netags, arcs) File E:/soft/pycharm/workplace/emergency/thesis/srl_ltp.py, line 67, in role_label labeller.load(r'E:\\soft\\pycharm\\pyltp\\3.4\\pisrl.model') # \u52a0\u8f7d\u6a21\u578b RuntimeError: incompatible native format - size of long Process finished with exit code 1"}, {"title": "\u54c8\u5de5\u5927\u81ea\u7136\u8bed\u8a00\u5904\u7406ltp\u5728windows10\u4e0b\u7684\u5b89\u88c5\u4f7f\u7528", "href": "2018/01/31/pyltp%E5%9C%A8windows%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85", "name": "\u6768\u5e06", "id": "100000357753", "ip": "202.120.60.12", "date": "2018-04-09 21:38:05", "content": "\u8d5e\uff01"}, {"title": "psychopy\u6559\u7a0b2-builder\u6982\u5ff5\u4ecb\u7ecd", "href": "2017/10/02/psychopy%E6%95%99%E7%A8%8B2-builder%E6%A6%82%E5%BF%B5%E4%BB%8B%E7%BB%8D", "name": "Sun", "id": "955803538", "ip": "182.170.19.142", "date": "2018-03-23 17:17:05", "content": "\u60f3\u8981\u901a\u8fc7\u952e\u76d8\u6309\u952e\u6765\u9009\u62e9\u56fe\u7247\uff0c\u4f46\u662f\u8bbe\u7f6e\u4e86\u4e4b\u540e\u65e0\u6cd5\u5faa\u73af \uff08\u4e0a\u8ff0\u7684\u7fa4\u627e\u4e0d\u5230\uff0c\u662fqq\u7fa4\u5417\uff1f\uff09"}, {"title": "\u54c8\u5de5\u5927\u81ea\u7136\u8bed\u8a00\u5904\u7406ltp\u5728windows10\u4e0b\u7684\u5b89\u88c5\u4f7f\u7528", "href": "2018/01/31/pyltp%E5%9C%A8windows%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85", "name": "\u5ff5\u5fc3\u5b89", "id": "858807732", "ip": "221.219.205.146", "date": "2018-03-14 14:29:59", "content": "\u591a\u8c22\u591a\u8c22\uff0c\u8fd9\u4e2a\u7f16\u8bd1\u597d\u7684\u7248\u672c\u5e2e\u5927\u5fd9\u4e86\uff01"}, {"title": "Psychopy\u6559\u7a0b\u9996\u9875 \u2014 PsychoPy v1.8-Psychopy\u6559\u7a0b", "href": "sychopy", "name": "\u8be5\u7528\u6237\u5df2\u7ecf\u88ab\u5c01", "id": "172625268", "ip": "202.112.90.160", "date": "2018-03-09 21:32:27", "content": "\u5173\u6ce8\u5173\u6ce8"}, {"title": "psychopy\u6559\u7a0b1-\u5165\u95e8\u8ba4\u8bc6psychopy", "href": "2017/09/29/psychopy%E6%95%99%E7%A8%8B1-%E5%85%A5%E9%97%A8%E8%AE%A4%E8%AF%86psychopy", "name": "\u70df\u82b1\u6cbc\u6cfd", "id": "100000072968", "ip": "59.58.194.115", "date": "2018-02-27 13:35:54", "content": "\u60a8\u597d\uff0c\u5fc3\u7406\u5b66\u6280\u672f\u535a\u5ba2\u7684\u94fe\u63a5\u6211\u8fd9\u91cc\u663e\u793a\u627e\u4e0d\u5230IP\u5730\u5740\uff0c\u4ee5\u53ca\u5fc3\u7406\u5b66\u6280\u672f\u7fa4\u5728QQ\u91cc\u641c\u4e0d\u5230\uff1f"}, {"title": "\u795e\u7ecf\u7f51\u7edcpython\u5e93keras\u5728windows\u4e0b\u90e8\u7f72\u8fc7\u7a0b\uff0c\u5e26\u4e0b\u8f7d\u94fe\u63a5", "href": "2017/06/13/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9Cpython%E5%BA%93keras%E5%9C%A8windows%E4%B8%8B%E9%83%A8%E7%BD%B2%E8%BF%87%E7%A8%8B%EF%BC%8C%E5%B8%A6%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5/#menu", "name": "DataImagination", "id": "251043155", "ip": "210.31.76.109", "date": "2017-09-12 14:30:02", "content": "\u5206\u4eab\u56fe\u7247"}, {"title": "\u795e\u7ecf\u7f51\u7edcpython\u5e93keras\u5728windows\u4e0b\u90e8\u7f72\u8fc7\u7a0b\uff0c\u5e26\u4e0b\u8f7d\u94fe\u63a5", "href": "2017/06/13/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9Cpython%E5%BA%93keras%E5%9C%A8windows%E4%B8%8B%E9%83%A8%E7%BD%B2%E8%BF%87%E7%A8%8B%EF%BC%8C%E5%B8%A6%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5/#menu", "name": "DataImagination", "id": "251043155", "ip": "210.31.76.109", "date": "2017-09-12 14:27:32", "content": "[/\u53ef\u7231]"}, {"title": "\u795e\u7ecf\u7f51\u7edcpython\u5e93keras\u5728windows\u4e0b\u90e8\u7f72\u8fc7\u7a0b\uff0c\u5e26\u4e0b\u8f7d\u94fe\u63a5", "href": "2017/06/13/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9Cpython%E5%BA%93keras%E5%9C%A8windows%E4%B8%8B%E9%83%A8%E7%BD%B2%E8%BF%87%E7%A8%8B%EF%BC%8C%E5%B8%A6%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5/#menu", "name": "DataImagination", "id": "251043155", "ip": "210.31.76.109", "date": "2017-09-12 14:27:00", "content": "\u5206\u4eab\u56fe\u7247"}]